{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"gender\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\Gender.vue"],"sourcesContent":["<template>\r\n    <div id=\"gender\"></div>\r\n</template>\r\n\r\n<script>\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n\r\n    name: 'GenDer',\r\n    setup() {\r\n        const gender = () => {\r\n            axios.get('http://localhost:8888/gender/list').then((sex) => {\r\n                console.log(sex.data);\r\n                // 处理数据\r\n                const data = sex.data;\r\n                var GDdata = [];//饼图数据\r\n                var Gder = [];//性别\r\n                var numb = [];//人数\r\n\r\n                // 分类数据\r\n                for (let item = 0; item < data.length; item++) {\r\n                    Gder.push(data[item].type);\r\n                    numb.push(data[item].num);\r\n                }\r\n                // 输入饼图数据\r\n                for (var i = 0; i < Gder.length; i++) {\r\n                    GDdata.push({\r\n                        name: Gder[i],\r\n                        value: numb[i]\r\n                    })\r\n                }\r\n                console.log(GDdata);\r\n                var GDCharts = echarts.init(document.getElementById('gender'));\r\n                var GDoption = {\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        formatter: '{b}<br/>人数：{c}'\r\n                    },\r\n                    legend: {\r\n                        top: '5%',\r\n                        left: 'center'\r\n                    },\r\n                    visualMap: {\r\n                        show: false,\r\n                        min: 80,\r\n                        max: 600,\r\n                        inRange: {\r\n                            colorLightness: [0, 1]\r\n                        }\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: 'Access From',\r\n                            type: 'pie',\r\n                            radius: '55%',\r\n                            center: ['50%', '50%'],\r\n\r\n                            data: GDdata.sort(function (a, b) {\r\n                                return a.value - b.value;\r\n                            }),\r\n                            roseType: 'radius',\r\n                            label: {\r\n                                color: 'pink'\r\n                            },\r\n                            animationType: 'scale',\r\n                            animationEasing: 'elasticOut',\r\n                            \r\n                        }\r\n\r\n                    ]\r\n                };\r\n                GDCharts.setOption(GDoption);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        }\r\n        // 调用，执行函数\r\n        onMounted(() => {\r\n            gender();\r\n        });\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#gender {\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAQ;;uBAAhBC,mBAAA,CAAuB,OAAvBC,UAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}