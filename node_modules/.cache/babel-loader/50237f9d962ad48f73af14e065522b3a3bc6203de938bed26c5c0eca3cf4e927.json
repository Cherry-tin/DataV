{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"physics\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\Physics.vue"],"sourcesContent":["<template>\r\n    <div id=\"physics\"></div>\r\n</template>\r\n\r\n<script>\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n\r\n    name: 'PhySics',\r\n    setup() {\r\n        const gender = () => {\r\n            var Provdata = [];//省分数线\r\n            var Xhdata = [];//校分数线\r\n            var arrayx = [];//年\r\n            axios.get('http://localhost:8888/gscorel/list').then((gphy) => {\r\n                // 处理数据\r\n                const data = gphy.data;\r\n                var arrayy = [];//分数\r\n                // 分类数据\r\n                for (let item = 0; item < data.length; item++) {\r\n                    arrayx.push(data[item].year);\r\n                    arrayy.push(data[item].score);\r\n                }\r\n                // 输入省分数线数据\r\n                for (var i = 0; i < arrayy.length; i++) {\r\n                    Provdata.push({\r\n                        value: arrayy[i]\r\n                    })\r\n                }\r\n                axios.get('http://localhost:8888/xhscorel/list').then((xhphy) => {\r\n                    // 处理数据\r\n                    const data = xhphy.data;\r\n                    var arrayy = [];//分数\r\n                    // 分类数据\r\n                    for (let item = 0; item < data.length; item++) {\r\n                        arrayy.push(data[item].score);\r\n                    }\r\n                    // 输入校分数线数据\r\n                    for (var i = 0; i < arrayy.length; i++) {\r\n                        Xhdata.push({\r\n                            value: arrayy[i]\r\n                        })\r\n                    }\r\n\r\n                    var PyhCharts = echarts.init(document.getElementById('physics'));\r\n                    var Pyhoption = {\r\n                        title: {\r\n                            text: 'Stacked Line'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'axis'\r\n                        },\r\n                        legend: {\r\n                            data: ['省', '校']\r\n                        },\r\n                        grid: {\r\n                            left: '3%',\r\n                            right: '4%',\r\n                            bottom: '3%',\r\n                            containLabel: true\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                saveAsImage: {}\r\n                            }\r\n                        },\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            boundaryGap: false,\r\n                            data: arrayx\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value',\r\n                            max: 500,\r\n                            min: 0,\r\n                            splitNumber: 5,\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '省',\r\n                                type: 'line',\r\n                                data: Provdata\r\n                            },\r\n                            {\r\n                                name: '校',\r\n                                type: 'line',\r\n                                data: Xhdata\r\n                            }\r\n\r\n                        ]\r\n\r\n                    };\r\n                    PyhCharts.setOption(Pyhoption);\r\n\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n            console.log(Provdata);\r\n            console.log(Xhdata);\r\n            console.log(arrayx);\r\n\r\n        }\r\n        // 调用，执行函数\r\n        onMounted(() => {\r\n            gender();\r\n        });\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#physics {\r\n    width: 800px;\r\n    height: 800px;\r\n}\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAS;;uBAAjBC,mBAAA,CAAwB,OAAxBC,UAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}