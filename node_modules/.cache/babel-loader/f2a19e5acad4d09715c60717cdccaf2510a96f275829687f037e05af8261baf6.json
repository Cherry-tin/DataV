{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"campus\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\Campus.vue"],"sourcesContent":["<template>\r\n    <div id=\"campus\"></div>\r\n</template>\r\n\r\n<script>\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n\r\n    name: 'CamPus',\r\n    setup() {\r\n        const gender = () => {\r\n            axios.get('http://localhost:8888/campus/list').then((cam) => {\r\n                // console.log(cam.data);\r\n                // 处理数据\r\n                const data = cam.data;\r\n                var CPdata = [];//饼图数据\r\n                var camp = [];//校区\r\n                var numb = [];//人数\r\n\r\n                // 分类数据\r\n                for (let item = 0; item < data.length; item++) {\r\n                    camp.push(data[item].name);\r\n                    numb.push(data[item].value);\r\n                }\r\n                // 输入饼图数据\r\n                for (var i = 0; i < camp.length; i++) {\r\n                    CPdata.push({\r\n                        name: camp[i],\r\n                        value: numb[i]\r\n                    })\r\n                }\r\n                var CPCharts = echarts.init(document.getElementById('campus'));\r\n                var CPoption = {\r\n                    title: {\r\n                        left: 'center',\r\n                        text: '校区新生分布情况',\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        text\r\n                        // formatter: '{b}<br/>人数：{c}'\r\n                    },\r\n                    legend: {\r\n                        top: '5%',\r\n                        left: 'center'\r\n                    },\r\n                    color:['#b1a9fc','#73c9fc'],\r\n                    series: [\r\n                        {\r\n                            name: '校区分布人数',\r\n                            type: 'pie',\r\n                            radius: ['50%', '70%'],\r\n                            avoidLabelOverlap: false,\r\n                            itemStyle: {\r\n                                borderRadius: 10,\r\n                                borderColor: '#fff',\r\n                                borderWidth: 2\r\n                            },\r\n                            label: {\r\n                                show: false,\r\n                                position: 'center'\r\n                            },\r\n                            emphasis: {\r\n                                label: {\r\n                                    show: true,\r\n                                    fontSize: 40,\r\n                                    fontWeight: 'bold'\r\n                                }\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            data: CPdata\r\n                        }\r\n                    ]\r\n                };\r\n                CPCharts.setOption(CPoption);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        }\r\n        // 调用，执行函数\r\n        onMounted(() => {\r\n            gender();\r\n        });\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#campus {\r\n    width: 300px;\r\n    height: 300px;\r\n}\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAQ;;uBAAhBC,mBAAA,CAAuB,OAAvBC,UAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}