{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 导入生命周期函数\nimport { onMounted } from 'vue';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'PhySics',\n  setup() {\n    const gender = () => {\n      var Provdata = []; //省分数线\n      var Xhdata = []; //校分数线\n      var arrayx = []; //年\n      axios.get('http://localhost:8888/gscorel/list').then(gphy => {\n        // 处理数据\n        const data = gphy.data;\n        var arrayy = []; //分数\n        // 分类数据\n        for (let item = 0; item < data.length; item++) {\n          arrayx.push(data[item].year);\n          arrayy.push(data[item].score);\n        }\n        // 输入省分数线数据\n        for (var i = 0; i < arrayy.length; i++) {\n          Provdata.push({\n            value: arrayy[i]\n          });\n        }\n        axios.get('http://localhost:8888/xhscorel/list').then(xhphy => {\n          // 处理数据\n          const data = xhphy.data;\n          var arrayy = []; //分数\n          // 分类数据\n          for (let item = 0; item < data.length; item++) {\n            arrayy.push(data[item].score);\n          }\n          // 输入校分数线数据\n          for (var i = 0; i < arrayy.length; i++) {\n            Xhdata.push({\n              value: arrayy[i]\n            });\n          }\n          var PyhCharts = echarts.init(document.getElementById('physics'));\n          var Pyhoption = {\n            title: {\n              text: 'Stacked Line'\n            },\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              data: ['省', '校']\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'category',\n              // boundaryGap: false,\n              data: arrayx\n            },\n            yAxis: {\n              type: 'value',\n              max: 490,\n              min: 360,\n              splitNumber: 5\n            },\n            series: [{\n              name: '省',\n              type: 'line',\n              data: Provdata\n            }, {\n              name: '校',\n              type: 'line',\n              data: Xhdata\n            }]\n          };\n          PyhCharts.setOption(Pyhoption);\n        }).catch(error => {\n          console.log(error);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      console.log(Provdata);\n      console.log(Xhdata);\n      console.log(arrayx);\n    };\n    // 调用，执行函数\n    onMounted(() => {\n      gender();\n    });\n  }\n};","map":{"version":3,"names":["onMounted","axios","echarts","name","setup","gender","Provdata","Xhdata","arrayx","get","then","gphy","data","arrayy","item","length","push","year","score","i","value","xhphy","PyhCharts","init","document","getElementById","Pyhoption","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","yAxis","max","min","splitNumber","series","setOption","catch","error","console","log"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\Physics.vue"],"sourcesContent":["<template>\r\n    <div id=\"physics\"></div>\r\n</template>\r\n\r\n<script>\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n\r\n    name: 'PhySics',\r\n    setup() {\r\n        const gender = () => {\r\n            var Provdata = [];//省分数线\r\n            var Xhdata = [];//校分数线\r\n            var arrayx = [];//年\r\n            axios.get('http://localhost:8888/gscorel/list').then((gphy) => {\r\n                // 处理数据\r\n                const data = gphy.data;\r\n                var arrayy = [];//分数\r\n                // 分类数据\r\n                for (let item = 0; item < data.length; item++) {\r\n                    arrayx.push(data[item].year);\r\n                    arrayy.push(data[item].score);\r\n                }\r\n                // 输入省分数线数据\r\n                for (var i = 0; i < arrayy.length; i++) {\r\n                    Provdata.push({\r\n                        value: arrayy[i]\r\n                    })\r\n                }\r\n                axios.get('http://localhost:8888/xhscorel/list').then((xhphy) => {\r\n                    // 处理数据\r\n                    const data = xhphy.data;\r\n                    var arrayy = [];//分数\r\n                    // 分类数据\r\n                    for (let item = 0; item < data.length; item++) {\r\n                        arrayy.push(data[item].score);\r\n                    }\r\n                    // 输入校分数线数据\r\n                    for (var i = 0; i < arrayy.length; i++) {\r\n                        Xhdata.push({\r\n                            value: arrayy[i]\r\n                        })\r\n                    }\r\n\r\n                    var PyhCharts = echarts.init(document.getElementById('physics'));\r\n                    var Pyhoption = {\r\n                        title: {\r\n                            text: 'Stacked Line'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'axis'\r\n                        },\r\n                        legend: {\r\n                            data: ['省', '校']\r\n                        },\r\n                        grid: {\r\n                            left: '3%',\r\n                            right: '4%',\r\n                            bottom: '3%',\r\n                            containLabel: true\r\n                        },\r\n                        toolbox: {\r\n                            feature: {\r\n                                saveAsImage: {}\r\n                            }\r\n                        },\r\n                        xAxis: {\r\n                            type: 'category',\r\n                            // boundaryGap: false,\r\n                            data: arrayx\r\n                        },\r\n                        yAxis: {\r\n                            type: 'value',\r\n                            max: 490,\r\n                            min: 360,\r\n                            splitNumber: 5,\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '省',\r\n                                type: 'line',\r\n                                data: Provdata\r\n                            },\r\n                            {\r\n                                name: '校',\r\n                                type: 'line',\r\n                                data: Xhdata\r\n                            }\r\n\r\n                        ]\r\n\r\n                    };\r\n                    PyhCharts.setOption(Pyhoption);\r\n\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n            console.log(Provdata);\r\n            console.log(Xhdata);\r\n            console.log(arrayx);\r\n\r\n        }\r\n        // 调用，执行函数\r\n        onMounted(() => {\r\n            gender();\r\n        });\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#physics {\r\n    width: 800px;\r\n    height: 800px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}