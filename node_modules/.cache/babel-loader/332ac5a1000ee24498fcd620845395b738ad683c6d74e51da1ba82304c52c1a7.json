{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"cn_map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\ChinaMap.vue"],"sourcesContent":["<template>\r\n  <div id=\"cn_map\"></div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nexport default {\r\n  name: 'ChinaMap',\r\n  setup() {\r\n    const cnMap = () => {\r\n      // 录取人数数据\r\n      var Cdata = [];\r\n      //地图数据\r\n      var mapdata;\r\n      axios.get('http://localhost:8888/chinamap/list').then((snum) => {\r\n        // 处理录取数据\r\n        const data = snum.data\r\n        var area = [];//地区\r\n        var sumb = [];//人数\r\n        // 用循环遍历数据\r\n        for (var item = 0; item < data.length; item++) {\r\n          area.push(data[item].name);\r\n          sumb.push(data[item].value);\r\n        }\r\n        // 加入录取人数数据\r\n        for (var i = 0; i < area.length; i++) {\r\n          Cdata.push({\r\n            value: sumb[i],\r\n            name: area[i]\r\n          })\r\n        }\r\n        // then请求成功，catch请求失败\r\n        axios.get('http://localhost:8080/china.json').then((res) => {\r\n          console.log(res.data);\r\n          // 储存地图数据\r\n          mapdata = res.data;\r\n          var chinaCharts = echarts.init(document.getElementById('cn_map'));\r\n          // 在axios的回调函数中注册地图矢量数据\r\n          echarts.registerMap('chinaMap', mapdata);\r\n          var CNoption = {\r\n            // 鼠标悬停显示数据\r\n            tooltip: {\r\n              trigger: 'item',\r\n              formatter: '{b}<br/>录取人数：{c}'\r\n            },\r\n            // 热力图\r\n            visualMap: {\r\n              show: true,\r\n              min: 0,\r\n              max: 200,\r\n              text: ['High', 'Low'],\r\n              realtime: false,\r\n              calculable: true,\r\n              inRange: {\r\n                color: ['#b6c7e5', '#4f7bde']\r\n              },\r\n              bottom:'30%'\r\n\r\n            },\r\n\r\n            series: [{\r\n              type: 'map',\r\n              map: 'chinaMap',\r\n              data: Cdata,\r\n              roam: true,  //允许缩放以及拖动效果\r\n              // label: {\r\n              //   show: true  //显示标签\r\n              // },\r\n\r\n              zoom: 1.25,    //初始的大小比例\r\n              center: [106.278179, 38.46637],// 设置地图中心点的坐标\r\n              // 鼠标悬停效果\r\n              emphasis: {\r\n                label: {\r\n                  textStyle: { color: '#fff' },//悬停时字体颜色\r\n                },\r\n                itemStyle: {\r\n                  areaColor: '#3c4bc6' //区域颜色\r\n                }\r\n              },\r\n              itemStyle: {\r\n                // 设置边框为白色\r\n                normal: {\r\n                  borderWidth: 0.5,//边界线大小\r\n                  borderColor: '#fff',//边界线颜色\r\n                }\r\n              }\r\n            }]\r\n\r\n          };\r\n          chinaCharts.setOption(CNoption);\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    }\r\n    // 调用，执行函数\r\n    onMounted(() => {\r\n      cnMap();\r\n    });\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#cn_map {\r\n  width: 620px;\r\n  height: 500px;\r\n  background-color: pink;\r\n}\r\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAQ;;uBAAhBC,mBAAA,CAAuB,OAAvBC,UAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}