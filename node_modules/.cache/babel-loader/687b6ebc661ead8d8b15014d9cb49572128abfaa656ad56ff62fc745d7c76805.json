{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const safari = isSafari();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction isSafari() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nconst noOffsets = {\n  x: 0,\n  y: 0\n};\nfunction getVisualOffsets(element, isFixed, floatingOffsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (isFixed === void 0) {\n    isFixed = true;\n  }\n  if (!isSafari()) {\n    return noOffsets;\n  }\n  const win = element ? getWindow(element) : window;\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== win) {\n    return noOffsets;\n  }\n  return {\n    x: ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0,\n    y: ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = getVisualOffsets(domElement, isFixedStrategy, offsetParent);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isSafari();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    // ignores Window, checks for [object VisualViewport]\n    const isVisualViewport = !isElement(ancestor) && ancestor.toString().includes('V');\n    if (ancestorScroll && (animationFrame ? isVisualViewport : true)) {\n      ancestor.addEventListener('scroll', update, {\n        passive: true\n      });\n    }\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","isNode","value","Node","getNodeName","nodeName","toLowerCase","isHTMLElement","HTMLElement","isElement","Element","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","safari","isSafari","css","transform","perspective","backdropFilter","filter","some","willChange","contain","CSS","supports","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","isFixed","floatingOffsetParent","_win$visualViewport","_win$visualViewport2","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","left","top","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","position","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getRectRelativeToOffsetParent","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","isVisualViewport","toString","addEventListener","passive","observer","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["D:/VUE_project/data_screen/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const safari = isSafari();\n  const css = getComputedStyle$1(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || !safari && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !safari && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction isSafari() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = {\n  x: 0,\n  y: 0\n};\nfunction getVisualOffsets(element, isFixed, floatingOffsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (isFixed === void 0) {\n    isFixed = true;\n  }\n  if (!isSafari()) {\n    return noOffsets;\n  }\n  const win = element ? getWindow(element) : window;\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== win) {\n    return noOffsets;\n  }\n  return {\n    x: ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0,\n    y: ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = getVisualOffsets(domElement, isFixedStrategy, offsetParent);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isSafari();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    // ignores Window, checks for [object VisualViewport]\n    const isVisualViewport = !isElement(ancestor) && ancestor.toString().includes('V');\n    if (ancestorScroll && (animationFrame ? isVisualViewport : true)) {\n      ancestor.addEventListener('scroll', update, {\n        passive: true\n      });\n    }\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}