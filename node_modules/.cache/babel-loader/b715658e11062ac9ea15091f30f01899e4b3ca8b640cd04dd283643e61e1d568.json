{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 导入生命周期函数\nimport { onMounted } from 'vue';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'PhySics',\n  setup() {\n    const gender = () => {\n      axios.get('http://localhost:8888/physics/list').then(phy => {\n        // 处理数据\n        var Provdata = []; //省分数线\n        var Xhdata = []; //校分数线\n        var arrayx = []; //年\n        const data = phy.data;\n        // 分类数据\n        for (let item = 0; item < data.length; item++) {\n          arrayx.push(data[item].year);\n          Provdata.push(data[item].province);\n          Xhdata.push(data[item].school);\n        }\n        var PyhCharts = echarts.init(document.getElementById('physics'));\n        var Pyhoption = {\n          title: {\n            text: '物理'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['校', '省']\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            // boundaryGap: false,\n            data: arrayx\n          },\n          yAxis: {\n            type: 'value',\n            max: 500,\n            min: 360,\n            splitNumber: 5\n          },\n          series: [{\n            name: '校',\n            type: 'line',\n            data: Xhdata\n          }, {\n            name: '广东省',\n            type: 'line',\n            data: Provdata\n          }]\n        };\n        PyhCharts.setOption(Pyhoption);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    // 调用，执行函数\n    onMounted(() => {\n      gender();\n    });\n  }\n};","map":{"version":3,"names":["onMounted","axios","echarts","name","setup","gender","get","then","phy","Provdata","Xhdata","arrayx","data","item","length","push","year","province","school","PyhCharts","init","document","getElementById","Pyhoption","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","yAxis","max","min","splitNumber","series","setOption","catch","error","console","log"],"sources":["D:\\VUE_project\\data_screen\\src\\components\\Physics.vue"],"sourcesContent":["<template>\r\n    <div id=\"physics\"></div>\r\n</template>\r\n\r\n<script>\r\n// 导入生命周期函数\r\nimport { onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n\r\n    name: 'PhySics',\r\n    setup() {\r\n        const gender = () => {\r\n            axios.get('http://localhost:8888/physics/list').then((phy) => {\r\n                // 处理数据\r\n                var Provdata = [];//省分数线\r\n                var Xhdata = [];//校分数线\r\n                var arrayx = [];//年\r\n                const data = phy.data;\r\n                // 分类数据\r\n                for (let item = 0; item < data.length; item++) {\r\n                    arrayx.push(data[item].year);\r\n                    Provdata.push(data[item].province);\r\n                    Xhdata.push(data[item].school);\r\n                }\r\n\r\n                var PyhCharts = echarts.init(document.getElementById('physics'));\r\n                var Pyhoption = {\r\n                    title: {\r\n                        text: '物理'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['校', '省']\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        bottom: '3%',\r\n                        containLabel: true\r\n                    },\r\n                    toolbox: {\r\n                        feature: {\r\n                            saveAsImage: {}\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        // boundaryGap: false,\r\n                        data: arrayx\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value',\r\n                        max: 500,\r\n                        min: 360,\r\n                        splitNumber: 5,\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '校',\r\n                            type: 'line',\r\n                            data: Xhdata\r\n                        },\r\n                        {\r\n                            name: '广东省',\r\n                            type: 'line',\r\n                            data: Provdata\r\n                        }\r\n                    ]\r\n\r\n                };\r\n                PyhCharts.setOption(Pyhoption);\r\n\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        }\r\n        // 调用，执行函数\r\n        onMounted(() => {\r\n            gender();\r\n        });\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#physics {\r\n    width: 800px;\r\n    height: 500px;\r\n}\r\n</style>"],"mappings":";AAKA;AACA,SAASA,SAAQ,QAAS,KAAK;AAC/B,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAO,KAAKC,OAAM,MAAO,SAAQ;AAEjC,eAAe;EAEXC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIA,CAAA,KAAM;MACjBJ,KAAK,CAACK,GAAG,CAAC,oCAAoC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QAC1D;QACA,IAAIC,QAAO,GAAI,EAAE,CAAC;QAClB,IAAIC,MAAK,GAAI,EAAE,CAAC;QAChB,IAAIC,MAAK,GAAI,EAAE,CAAC;QAChB,MAAMC,IAAG,GAAIJ,GAAG,CAACI,IAAI;QACrB;QACA,KAAK,IAAIC,IAAG,GAAI,CAAC,EAAEA,IAAG,GAAID,IAAI,CAACE,MAAM,EAAED,IAAI,EAAE,EAAE;UAC3CF,MAAM,CAACI,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC,CAACG,IAAI,CAAC;UAC5BP,QAAQ,CAACM,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC,CAACI,QAAQ,CAAC;UAClCP,MAAM,CAACK,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC,CAACK,MAAM,CAAC;QAClC;QAEA,IAAIC,SAAQ,GAAIjB,OAAO,CAACkB,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAAC;QAChE,IAAIC,SAAQ,GAAI;UACZC,KAAK,EAAE;YACHC,IAAI,EAAE;UACV,CAAC;UACDC,OAAO,EAAE;YACLC,OAAO,EAAE;UACb,CAAC;UACDC,MAAM,EAAE;YACJhB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG;UACnB,CAAC;UACDiB,IAAI,EAAE;YACFC,IAAI,EAAE,IAAI;YACVC,KAAK,EAAE,IAAI;YACXC,MAAM,EAAE,IAAI;YACZC,YAAY,EAAE;UAClB,CAAC;UACDC,OAAO,EAAE;YACLC,OAAO,EAAE;cACLC,WAAW,EAAE,CAAC;YAClB;UACJ,CAAC;UACDC,KAAK,EAAE;YACHC,IAAI,EAAE,UAAU;YAChB;YACA1B,IAAI,EAAED;UACV,CAAC;UACD4B,KAAK,EAAE;YACHD,IAAI,EAAE,OAAO;YACbE,GAAG,EAAE,GAAG;YACRC,GAAG,EAAE,GAAG;YACRC,WAAW,EAAE;UACjB,CAAC;UACDC,MAAM,EAAE,CACJ;YACIxC,IAAI,EAAE,GAAG;YACTmC,IAAI,EAAE,MAAM;YACZ1B,IAAI,EAAEF;UACV,CAAC,EACD;YACIP,IAAI,EAAE,KAAK;YACXmC,IAAI,EAAE,MAAM;YACZ1B,IAAI,EAAEH;UACV;QAGR,CAAC;QACDU,SAAS,CAACyB,SAAS,CAACrB,SAAS,CAAC;MAElC,CAAC,CAAC,CAACsB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC;IAEL;IACA;IACA9C,SAAS,CAAC,MAAM;MACZK,MAAM,CAAC,CAAC;IACZ,CAAC,CAAC;EACN;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}